---
- name: inital list
  ansible.builtin.include_tasks:
    file: multipass_list.yml
- debug: var=inst_list verbosity=3
- debug: var=setup_lst verbosity=3

- name: ensure first_setup exists
  ansible.builtin.file:
    path: first_setup
    state: directory
    mode: "0755"
- name: generate ssh-keygen
  command: ssh-keygen -C ubuntu-mylyntest -N "" -b 4096 -f first_setup/ubuntu_key
  args: 
    creates: first_setup/ubuntu_key
- name: get ubuntu_key.pub
  set_fact:
    user_data: "{{ lookup('file', 'first_setup/ubuntu_key.pub' ) }}"
- name: create cloud-init.yaml
  ansible.builtin.copy:
      dest: first_setup/cloud-init.yaml
      content: |
        #cloud-config
        users:
          - default:
            ssh_authorized_keys:
              - {{ user_data }}

- name: create if needed
  shell: multipass launch -n {{ item.name }} --disk {{ item.disk }} --mem {{ item.memory }} --cpus {{ item.cpus }} {{ item.launch_extra }} --cloud-init first_setup/cloud-init.yaml
  when: item.name not in inst_list | map(attribute='inst_name') 
  with_items: "{{ setup_lst }}"
- name: new list
  ansible.builtin.include_tasks:
    file: multipass_list.yml
- name: debug new list
  debug: var=inst_list verbosity=3

- name: build name ip map
  ansible.builtin.set_fact:
    ip_2_change: "{{ ip_2_change | default([]) + [ { 'aname': item.name, 'aip': item.ip4, 'mip': (inst_list | selectattr(\"inst_name\", \"equalto\", item.name) | map(attribute='ip_adr4'))[0] } ] }}"
  when: >
    item.name in inst_list | map(attribute='inst_name') and
    (inst_list | selectattr("inst_name", "equalto", item.name))| map(attribute='ip_adr4') != [item.ip4 ]
  with_items: "{{ setup_lst }}"
- name: debug ip_2_change
  debug: var=ip_2_change verbosity=3
  when: ip_2_change is defined

- name: "Replace line in file inventory.yml"
  replace: 
    path: inventory.yml
    regexp: "(^\\s*ansible_host:\\s*)(\"{{ item.aip | regex_escape() }}\")(.*)$"
    replace: "\\1\"{{item.mip}}\""
  with_items: "{{ ip_2_change }}"
  when: ip_2_change is defined

- name: remove mylyn vm from etc hosts
  become: true
  become_user: root
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: "{{'^.*'+ item.aname +'.*' }}"
    state: absent
  with_items: "{{ ip_2_change }}"
  when: ip_2_change is defined

- name: add mylyn vm to etc hosts}
  become: true
  become_user: root
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ item.mip  + ' ' + hostvars[item.aname].default_etc_hosts }}"
    state: present
  with_items: "{{ ip_2_change }}"
  when: ip_2_change is defined
