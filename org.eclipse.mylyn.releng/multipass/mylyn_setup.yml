#
# set Globale Facts
#
- hosts: localhost
  gather_facts: true
  tasks:
    - name: include global mode
      ansible.builtin.include_tasks:
        file: "global_setup.yml"
      tags:
        - global
    - name: debug distribution
      debug:
        msg: "{{ localhostPlatform }}"

#
# start all non admin Docker Nodes
#
- hosts: "{{ hostvars['localhost'].setup_noadmin_vm_list }}"
  gather_facts: true
  vars:
    rootca_name: "{{ hostvars['localhost'].rootca_server_name }}"
  tasks:
    - name: Ensure docker deamon is running
      service:
        name: docker
        state: started
      become: true
    - name: debug distribution
      debug:
        msg: "{{ ansible_facts['distribution'] +'/' + ansible_facts['architecture'] + ' on ' + hostvars['localhost'].localhostPlatform }}"
#
# 1) install Docker Swarm Leader (if needed)
# 2) stop all Docker Services / Container
#
- hosts: "{{ hostvars['localhost'].prim_install_server_name }}"
  gather_facts: false
  vars:
    swarm_master_name: "{{ hostvars['localhost'].prim_install_server_name  }}"
  roles:
    - role: swarm_delete
      when: ((hostvars['localhost'].docker_swarm_recreate | bool == true) or (hostvars['localhost'].docker_mode_global == "container"))
      tags:
        - docker_swarm_recreate
    - role: swarm_setup
      when:  hostvars['localhost'].docker_mode_global == "swarm"
      tags:
        - docker_swarm_setup
    - role: swarm_stop
      when: hostvars['localhost'].docker_swarm_recreate | bool == false
#
# cleanup all docker instances 
#
- hosts: "{{ hostvars['localhost'].setup_noadmin_vm_list }}"
  gather_facts: true
  vars:
    rootca_name: "{{ hostvars['localhost'].rootca_server_name }}"
  roles:
    - role: docker_cleanup
      tags:
        - docker_cleanup
#
# Services installieren
# install Docker Services / Container
# 
- hosts: "{{ hostvars['localhost'].prim_install_server_name  }}"
  gather_facts: false
  vars:
    swarm_master_name: "{{ hostvars['localhost'].prim_install_server_name  }}"
    docker_mode: "{{ hostvars['localhost'].docker_mode_global }}"
  roles:
    - role: traeefik
      vars:
        common_domain_name: "{{ hostvars['localhost'].local_domain }}"
    - role: socket-proxy
    - role: mylyn_idx
      vars:
        common_domain_name: "{{ hostvars['localhost'].local_domain }}"
        remote_domain_name: "{{ hostvars['localhost'].remote_domain }}"
    - role: artifactory
      tags:
        - artifactory
      vars:
        common_domain_name: "{{ hostvars['localhost'].local_domain }}"
#        remote_domain_name: "{{ hostvars['localhost'].remote_domain }}"
    - role: gitlab
      tags:
        - gitlab
      vars:
        common_domain_name: "{{ hostvars['localhost'].local_domain }}"
        gitlabImageVersion: "16.9.0"
        gitlabHostURL: "gitlab.{{ hostvars['localhost'].local_domain }}"
    - role: jenkins
      tags:
        - jenkins
      vars:
        common_domain_name: "{{ hostvars['localhost'].local_domain }}"
        remote_domain_name: "{{ hostvars['localhost'].remote_domain }}"
        jenkins_instances:
#          - {  servmame: "jenkins-2_303_3", port1: 8081, port2: 50001, data_dir: "jenkins-2.303.3", image_tag: "jenkins/jenkins:2.303.3-lts-jdk11", extra_info: '' }
#          - {  servmame: "jenkins-1_651_1", port1: 8084, port2: 50004, data_dir: "jenkins-2.303.3", image_tag: "jenkins:1.651.1", extra_info: '"' }
          - {  servmame: "jenkins-2_375_2", port1: 8083, port2: 50003, data_dir: "jenkins-2.303.3", image_tag: "jenkins/jenkins:2.375.2-lts", extra_info: '"default": "true"' }
#          - {  servmame: "jenkinsci", port1: 8082, port2: 50002, data_dir: "jenkinsci", image_tag: "jenkins/jenkins:2.375.2-lts", extra_info: '"local_test_service":"true"' }
    - role: bugzilla
      tags:
        - bugzilla
      vars:
        common_domain_name: "{{ hostvars['localhost'].local_domain }}"
        remote_domain_name: "{{ hostvars['localhost'].remote_domain }}"
        bugzilla_instances:
          - { git_branch: "release-4.4.13", servmame: "bugzilla-4_4", port1: 8090, port2: 8490, image_tag: "4.4", extra_info: '"default": "true"' }
#          - { git_branch: "release-4.4.13", servmame: "bugzilla-4_4-custom-wf", port1: 8091, port2: 8491, image_tag: "4.4-custom_wf", extra_info: '"custom_wf":"true"' }
#          - { git_branch: "release-4.4.13", servmame: "bugzilla-4_4-custom-wf-and-status", port1: 8092, port2: 8492, image_tag: "4.4-custom_wf_a_s", extra_info: '"custom_wf_and_status":"true"' }
#          - { git_branch: "release-4.4.13", servmame: "bugzilla-4_4-bugaliases", port1: 8093, port2: 8493, image_tag: "4.4-bugaliases", extra_info: '"use_bug_alias":"true"' }
#          - { git_branch: "5.2", servmame: "bugzilla-5_2", port1: 8094, port2: 8494, image_tag: "5.2", extra_info: '' }
#          - { git_branch: "5.2", servmame: "bugzilla-5_2-rest", port1: 8095, port2: 8495, image_tag: "5.2-rest", extra_info: '"rest_enabled":"true", "default": "true", "testdataVersion": "Version1"' }
#          - { git_branch: "5.2", servmame: "bugzilla-5_2-rest-api", port1: 8096, port2: 8496, image_tag: "5.2-rest-api", extra_info: '"rest_enabled": "true", "api_key_enabled": "true", "testdataVersion": "Version1"' }
